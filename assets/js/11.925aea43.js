(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{435:function(a,s,t){a.exports=t.p+"assets/img/00.9df3399c.jpg"},466:function(a,s,t){"use strict";t.r(s);var n=t(62),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"走近-java-编译器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#走近-java-编译器"}},[a._v("#")]),a._v(" 走近 Java 编译器")]),a._v(" "),n("h2",{attrs:{id:"java-编译器概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#java-编译器概述"}},[a._v("#")]),a._v(" Java 编译器概述")]),a._v(" "),n("p",[n("code",[a._v("javac")]),a._v("命令可以将"),n("code",[a._v("Java")]),a._v("代码编译成字节码文件，但"),n("code",[a._v("javac")]),a._v("并不是"),n("code",[a._v("Java")]),a._v("编译器。")]),a._v(" "),n("p",[n("code",[a._v("javac")]),a._v("只是启动了一个"),n("code",[a._v("Java")]),a._v("虚拟机，执行了一个"),n("code",[a._v("Java")]),a._v("程序，跟我们平常用"),n("code",[a._v("java")]),a._v("命令运行一个程序是一样的。换句话说，"),n("code",[a._v("Java")]),a._v("编译器本身也是用"),n("code",[a._v("Java")]),a._v("写的。")]),a._v(" "),n("p",[a._v("一门语言的编译器，竟然可以用自己来实现。这种现象，叫做"),n("strong",[a._v("自举")]),n("code",[a._v("Bootstrapping")]),a._v("。实际上，一门语言的编译器，一开始肯定是要用其他语言来实现的。但等它成熟了以后，就会尝试实现自举。")]),a._v(" "),n("p",[a._v("既然"),n("code",[a._v("Java")]),a._v("编译器是用"),n("code",[a._v("Java")]),a._v("实现的，那意味着你自己也可以写一个程序，来调用"),n("code",[a._v("Java")]),a._v("的编译器。")]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("javax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("tools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JavaCompiler")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("javax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("tools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ToolProvider")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CoreApplication")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JavaCompiler")]),a._v(" compiler "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ToolProvider")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSystemJavaCompiler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" compiler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CoreTest.java"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"result is "')]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[n("code",[a._v("java.compiler")]),a._v("模块是"),n("code",[a._v("Java")]),a._v("编译器的"),n("code",[a._v("API")]),a._v("，"),n("code",[a._v("jdk.compiler")]),a._v("模块是"),n("code",[a._v("Java")]),a._v("编译器的具体实现。")]),a._v(" "),n("h2",{attrs:{id:"词法分析器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#词法分析器"}},[a._v("#")]),a._v(" 词法分析器")]),a._v(" "),n("p",[n("code",[a._v("Java")]),a._v("的词法分析器的具体实现在"),n("code",[a._v("JavaTokenizer")]),a._v("中，其"),n("code",[a._v("readToken")]),a._v("方法实现了主干的词法分析逻辑，能够从字符流中识别出"),n("code",[a._v("Token")]),a._v("。")]),a._v(" "),n("p",[n("code",[a._v("readToken")]),a._v("逻辑如下：")]),a._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("循环读取字符:\n    case 空白字符:\n        处理 继续循环\n    case 行结束符:\n        处理 继续循环\n    case A-Za-z$_:\n        调用scanIden识别标识符和关键字 并结束循环\n    case 0开头的2/8/16进制 或10进制1-9 以及小数点:\n        调用scanNumber识别数字 并结束循环\n    case , ; ( ) [ ] { } 等符号:\n        返回代表这些符号的 Token 并结束循环\n    case isSpecial 识别特殊字符:\n        调用scanOperator识别操作符\n")])])]),n("p",[n("img",{attrs:{src:t(435),alt:"Java 词法分析器的有限自动机"}})]),a._v(" "),n("p",[a._v("针对关键字与标识符冲突的问题："),n("code",[a._v("Java")]),a._v("首先把所有的关键字和标识符都作为标识符识别出来，然后再从里面把所有预定义的关键字挑出来。这比构造一个复杂的有限自动机实现起来更简单！")]),a._v(" "),n("h2",{attrs:{id:"语法分析器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法分析器"}},[a._v("#")]),a._v(" 语法分析器")])])}),[],!1,null,null,null);s.default=e.exports}}]);