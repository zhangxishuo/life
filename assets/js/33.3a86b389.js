(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{483:function(t,a,s){"use strict";s.r(a);var n=s(62),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jvm-如何执行方法调用-一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm-如何执行方法调用-一"}},[t._v("#")]),t._v(" JVM 如何执行方法调用(一)")]),t._v(" "),s("p",[t._v("有如下两个"),s("code",[t._v("Java")]),t._v("方法：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("当执行"),s("code",[t._v("invoke(null, 1)")]),t._v("时，这个"),s("code",[t._v("invoke")]),t._v("调用有二义性。然而，"),s("code",[t._v("Java")]),t._v("编译器直接将方法调用识别为调用第二个方法，这究竟是为什么呢？")]),t._v(" "),s("h2",{attrs:{id:"重载与重写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重载与重写"}},[t._v("#")]),t._v(" 重载与重写")]),t._v(" "),s("p",[t._v("如果在同一个类中定义名字相同的方法，那么它们的参数列表必须不同。这称为方法重载。")]),t._v(" "),s("p",[t._v("重载的方法在编译过程中即可完成识别。具体到每一个方法调用，"),s("code",[t._v("Java")]),t._v("编译器会根据所传入参数的声明类型来选取重载方法。")]),t._v(" "),s("ol",[s("li",[t._v("在不考虑对基本类型自动装拆箱，以及可变长参数的情况下选取重载方法；")]),t._v(" "),s("li",[t._v("如果在第"),s("code",[t._v("1")]),t._v("个阶段中没有找到适配的方法，那么在允许自动装拆箱，但不允许可变长参数的情况下选取重载方法；")]),t._v(" "),s("li",[t._v("如果在第"),s("code",[t._v("2")]),t._v("个阶段中没有找到适配的方法，那么在允许自动装拆箱以及可变长参数的情况下选取重载方法。")])]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("Java")]),t._v("编译器在同一个阶段中找到了多个适配的方法，那么它会在其中选择一个最为贴切的，而决定贴切程度的一个关键就是形式参数类型的继承关系。")]),t._v(" "),s("p",[t._v("在开头的例子中，当传入"),s("code",[t._v("null")]),t._v("时，它既可以匹配第一个方法中声明为"),s("code",[t._v("Object")]),t._v("的形式参数，也可以匹配第二个方法中声明为"),s("code",[t._v("String")]),t._v("的形式参数。由于"),s("code",[t._v("String")]),t._v("是"),s("code",[t._v("Object")]),t._v("的子类，因此"),s("code",[t._v("Java")]),t._v("编译器会认为第二个方法更为贴切。")])])}),[],!1,null,null,null);a.default=e.exports}}]);